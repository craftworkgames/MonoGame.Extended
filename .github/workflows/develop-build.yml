################################################################################
### Build MonoGame.Extended (Develop)
### Clones the `develop` branch and performs a build, test, then pack of the
### Monogame.Extended source code.  Once the build job is finished, the deploy
### job will upload the nupkg files created to the MonoGame.Extended GitHub
### and NuGet sources.
###
###     - Only runs on a push to the `develop` branch
###     - Sets the IS_PRERELASE and BUILD_NUMBER environment variables which are
###       picked up in the Directory.Build.props file to set the version suffix
###       so the packages are build as prerelease packages.
################################################################################
name: "Build MonoGame.Extended (Develop)"

on:
  push:
    branches: develop

jobs:
  build:
    name: "Build MonoGame.Extended"
    runs-on: ubuntu-latest
    env:
      IS_PRERELEASE: true
      BUILD_NUMBER: ${{ github.run_number }}

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Setup DotNet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x

      - name: Test MonoGame.Extended
        run: dotnet test --nologo --verbosity minimal --configuration Release

      - name: Build MonoGame.Extended
        run: dotnet build --nologo --verbosity minimal --configuration Release

      - name: Pack MonoGame.Extended
        run: dotnet pack --nologo --verbosity minimal --configuration Release

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: ./.artifacts/source/package/release/*.nupkg


  deploy-job:
      name: "Deploy Nugets"
      runs-on: ubuntu-latest
      needs: [build]
      permissions:
        packages: write
        contents: write

      steps:
        - name: "Download Artifacts For Deploy"
          uses: actions/download-artifact@v4
          with:
            name: build-artifacts
            path: ./.artifacts

        - name: "Push Packages"
          run: |
            PACKAGES=(".artifacts/*.nupkg")
            for PACKAGE in "${PACKAGES[@]}"; do
              dotnet nuget push "$PACKAGE" --source "https://api.nuget.org/v3/index.json" --skip-duplicate --api-key "${{ secrets.NUGET_ACCESS_TOKEN }}"
            done
